{"ast":null,"code":"const mathLib = {};\n\nmathLib.sProduct = function (c, arr) {\n  let res = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = c * arr[i];\n  }\n\n  return res;\n};\n\nmathLib.linspace = function (startValue, stopValue, cardinality) {\n  var arr = [];\n  var step = (stopValue - startValue) / (cardinality - 1);\n\n  for (var i = 0; i < cardinality; i++) {\n    arr.push(startValue + step * i);\n  }\n\n  arr[arr.length - 1] = stopValue;\n  return arr;\n};\n\nmathLib.linspacee = function (a, b, npoints, c) {\n  let arr = [];\n  let step = (b - a) / (npoints - c);\n\n  for (let i = a; i <= b; i += step) {\n    if (i == 0) {\n      arr.push(i);\n    } else {\n      arr.push(-1 * Number(parseFloat(i).toFixed(2)));\n    }\n  }\n\n  return arr;\n}; // mathLib.vvv = function(start, stop) \n// {\n//   var result = [];\n//   var ctr = 0;\n//   var x=0;\n//   if (start.length === 0) \n//    return \"array1 is empty\";\n//   if (stop.length === 0) \n//    return \"array2 is empty\";   \n//  while (ctr < start.length && ctr < stop.length) \n//   {\n//     result.push(stop[ctr] + start[ctr] );\n//     ctr++;\n//   }\n//  if (ctr === start.length) \n//  {\n//     for (x = ctr; x < stop.length; x++)   {\n//       result.push(stop[x]);\n//     }\n//   } \n//   else\n//   {\n//   for (x = ctr; x < start.length; x++) \n//     {\n//       result.push(start[x]);\n//     }\n//   }\n//   return result;\n// }\n// mathLib.vSum = function (a, b, x) {\n// \tlet sum = []\n// \tfor ( let i = 0; i < a.length; i++) {\n//        sum.push( b[i]+(x*a[i]) )\n//       \t}\n// \treturn sum\n// }\n//  mathLib.vvSum = function(a,b,c,d,e,f,g){\n//  \tlet sum = []\n//  \tfor (let i = 0; i < a.length; i ++){\n//  \t\tsum[i] = a[i]+b[i]+c[i]+d[i]+e[i]+f[i]+g[i]\n//  \t}\n//  \treturn sum\n//  }\n// mathLib.sumdef = function(a,b,c){\n//   let sum = []\n//   for (let i = 0; i < a.length; i ++){\n//     sum[i] = a[i]-b[i]+c[i]\n//   }\n//   return sum\n//  }\n// mathLib.vvv = function(start, stop){\n//   var result = [];\n//   var ctr = 0;\n//   var x=0;\n//  while (ctr < start.length && ctr < stop.length) \n//   {\n//     result.push(stop[ctr] - start[ctr] );\n//     ctr++;\n//   }\n//  if (ctr === start.length) \n//  {\n//     for (x = ctr; x < stop.length; x++)   {\n//       result.push(stop[x]);\n//     }\n//   } \n//   else\n//   {\n//   for (x = ctr; x < start.length; x++) \n//     {\n//       result.push(start[x]);\n//     }\n//   }\n//   return result;\n// }\n// mathLib.mul = function(){\n// for (let i = 0; i < start.length; i ++){\n//         \tv[i] = s *v[i]\n//         \tresult.push(v)\n//         }\n//         return result \n// }\n// mathLib.range = function(start, end) {\n//     var ans = [];\n//     for (let i = start; i <= end; i++) {\n//         ans.push(i);\n//     }\n//     return ans;\n// }\n// // console.log(range(1,6))\n// mathLib.sign = function (x) {\n// \tif (isNaN(x)) {\n// \t\treturn NaN\n// \t}\n//   if (x > 0) {\n//   \treturn 1\n//   } else if (x === 0 ){\n//   \treturn 0\n//   } else {\n//   \treturn -1\n//   }\n// }\n// mathLib.dot = function (a, b) {\n// \tlet sum = 0\n// \tfor ( let i = 0; i < a.length; i++) {\n// \t\tsum += a[i]*b[i]\n// \t}\n// \treturn sum\n// }\n// mathLib.abs = function (array) {\n//   var sum = 0\n//   for(i = 0; i < array.length; i++){\n//    sum += Math.pow(Math.abs(array[i]), 2)\n//   }\n//   return Math.sqrt(sum)\n// }\n// mathLib.zero = function (b, c) {\n//     var v = []\n//     for (j = 0; j < b; j ++){\n//         v.push(Array(c).fill(0))\n//     }\n//     return v \n// }\n// mathLib.cross = function (a, b){\n// \tlet c = [(a[1]*b[2] - a[2]*b[1]), (a[2]*b[0] - a[0]*b[2]), (a[0]*b[1] - a[1]*b[0])]\n// \treturn c\n// }\n// mathLib.arrSum = function(arr){\n//   return arr.reduce(function(a,b){\n//     return a + b\n//   }, 0);\n// }\n// mathLib.random =function(dataSetSize, minValue, maxValue) {\n//   return new Array(dataSetSize).fill(0).map(function(n) {\n//     return Math.random() * (maxValue - minValue) + minValue;\n//   })\n// }\n// mathLib.element = function(a, b, c){\n// \t\t\t\t\tlet v = []\n// \t\t\t\t\tfor ( i = a; i < b.length - c; i++){\n// \t\t\t\t\t\tv.push(b[i])\n// \t\t\t\t\t}\n// \t\t\t\t\treturn v\n// }\n// mathLib.pow2 = function (arr) {\n// \tlet s = []\n// \tfor ( let i = 0; i < arr.length; i++) {\n//        s.push(Math.pow(Math.abs(arr[i]),2))\n//       \t}\n// \treturn s\n// }\n// mathLib.addd = function(a, arr){\n//     let s = []\n//     for ( let i = 0; i < arr.length; i++) {\n//     s.push(a + arr[i])\n//     }\n//     return s \n// }\n// mathLib.check = function(arr){\n// let v = []\n// let result \n// for (var i = 0; i < arr.length; i++) {\n//     if (arr[i] < 0) {\n//         result = true\n//         } else {\n//         \tresult = false\n//                }\n//         v.push(result)\n//     }\n//     return v\n// }\n// mathLib.checkk = function(arr){\n// let v = []\n// let result \n// for (var i = 0; i < arr.length; i++) {\n//     if (arr[i] > 0) {\n//         result = true\n//         } else {\n//         \tresult = false\n//                }\n//         v.push(result)\n//     }\n//     return v\n// }\n// mathLib.xor = function(arr1,arr2){\n// \tlet v =[]\n// for (var i = 0; i < arr1.length; i++) {\n//      v.push(arr1[i]^arr2[i])\n// }\n// return v\n// }\n// mathLib.and = function(arr1,arr2){\n// \tlet v =[]\n// for (var i = 0; i < arr1.length; i++) {\n//      v.push(arr1[i] & arr2[i])\n// }\n// return v\n// }\n// mathLib.nonflatzero = function(arr){\n// return arr.reduce((ret_arr, number, index) => {\n// if (number != 0) ret_arr.push(index)\n// return ret_arr}, [])\n// }\n// mathLib.summ = function (array) {\n//   var finalSum = []\n//   for(i = 0; i < array[0].length; i++){\n//     var s = 0\n//     for (j = 0; j < array.length; j++){\n//        s += array[j][i]\n//     }\n//     finalSum[i] = s;\n//   }\n//   return finalSum\n// }\n\n\nmodule.exports = mathLib;","map":{"version":3,"sources":["/home/parvin/Documents/my-app/src/mathLib.js"],"names":["mathLib","sProduct","c","arr","res","i","length","linspace","startValue","stopValue","cardinality","step","push","linspacee","a","b","npoints","Number","parseFloat","toFixed","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAG,EAAhB;;AAEAA,OAAO,CAACC,QAAR,GAAmB,UAASC,CAAT,EAAYC,GAAZ,EAAiB;AACnC,MAAIC,GAAG,GAAG,EAAV;;AACG,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AAClCD,IAAAA,GAAG,CAACC,CAAD,CAAH,GAASH,CAAC,GAAGC,GAAG,CAACE,CAAD,CAAhB;AACF;;AACD,SAAOD,GAAP;AACH,CAND;;AAQAJ,OAAO,CAACO,QAAR,GAAmB,UAASC,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,EAA6C;AAC/D,MAAIP,GAAG,GAAG,EAAV;AACA,MAAIQ,IAAI,GAAG,CAACF,SAAS,GAAGD,UAAb,KAA4BE,WAAW,GAAG,CAA1C,CAAX;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,WAApB,EAAiCL,CAAC,EAAlC,EACC;AAAEF,IAAAA,GAAG,CAACS,IAAJ,CAASJ,UAAU,GAAIG,IAAI,GAAGN,CAA9B;AACA;;AACDF,EAAAA,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAH,GAAsBG,SAAtB;AAEA,SAAON,GAAP;AACA,CATH;;AAWAH,OAAO,CAACa,SAAR,GAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,OAAf,EAAwBd,CAAxB,EAA2B;AAC3C,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIQ,IAAI,GAAG,CAACI,CAAC,GAAGD,CAAL,KAAWE,OAAO,GAAGd,CAArB,CAAX;;AACA,OAAI,IAAIG,CAAC,GAAGS,CAAZ,EAAeT,CAAC,IAAIU,CAApB,EAAuBV,CAAC,IAAIM,IAA5B,EAAkC;AAE9B,QAAIN,CAAC,IAAI,CAAT,EAAW;AACXF,MAAAA,GAAG,CAACS,IAAJ,CAASP,CAAT;AACH,KAFG,MAEC;AACDF,MAAAA,GAAG,CAACS,IAAJ,CAAS,CAAC,CAAD,GAAGK,MAAM,CAACC,UAAU,CAACb,CAAD,CAAV,CAAcc,OAAd,CAAsB,CAAtB,CAAD,CAAlB;AAEH;AACA;;AACD,SAAOhB,GAAP;AACH,CAbD,C,CAeiB,MAAM,CAACC,OAAP,GAAiBrB,OAAjB","sourcesContent":["const mathLib = {}\n\nmathLib.sProduct = function(c, arr) {\n\tlet res = []\n    for (let i = 0; i < arr.length; i++) {\n       res[i] = c * arr[i]\n    }\n    return res\n}  \n\nmathLib.linspace = function(startValue, stopValue, cardinality) {\n var arr = []; \n var step = (stopValue - startValue) / (cardinality - 1);\n for (var i = 0; i < cardinality; i++) \n \t{ arr.push(startValue + (step * i));\n \t } \n \t arr[arr.length - 1] = stopValue\n\t\n \t return arr; \n \t}\n \nmathLib.linspacee = function(a, b, npoints, c) {\n    let arr = []\n    let step = (b - a) / (npoints - c)\n    for(let i = a; i <= b; i += step) {\n        \n        if (i == 0){\n        arr.push(i)\n    }else{\n        arr.push(-1*Number(parseFloat(i).toFixed(2)))\n        \n    }\n    }\n    return arr\n} ; \n\n// mathLib.vvv = function(start, stop) \n// {\n//   var result = [];\n//   var ctr = 0;\n//   var x=0;\n\n//   if (start.length === 0) \n//    return \"array1 is empty\";\n//   if (stop.length === 0) \n//    return \"array2 is empty\";   \n\n//  while (ctr < start.length && ctr < stop.length) \n//   {\n//     result.push(stop[ctr] + start[ctr] );\n//     ctr++;\n//   }\n\n//  if (ctr === start.length) \n//  {\n//     for (x = ctr; x < stop.length; x++)   {\n//       result.push(stop[x]);\n//     }\n//   } \n//   else\n//   {\n//   for (x = ctr; x < start.length; x++) \n//     {\n//       result.push(start[x]);\n//     }\n//   }\n//   return result;\n// }\n\n\n// mathLib.vSum = function (a, b, x) {\n// \tlet sum = []\n// \tfor ( let i = 0; i < a.length; i++) {\n//        sum.push( b[i]+(x*a[i]) )\n//       \t}\n// \treturn sum\n// }\n//  mathLib.vvSum = function(a,b,c,d,e,f,g){\n//  \tlet sum = []\n//  \tfor (let i = 0; i < a.length; i ++){\n//  \t\tsum[i] = a[i]+b[i]+c[i]+d[i]+e[i]+f[i]+g[i]\n//  \t}\n//  \treturn sum\n//  }\n// mathLib.sumdef = function(a,b,c){\n//   let sum = []\n//   for (let i = 0; i < a.length; i ++){\n//     sum[i] = a[i]-b[i]+c[i]\n//   }\n//   return sum\n//  }\n \n// mathLib.vvv = function(start, stop){\n//   var result = [];\n//   var ctr = 0;\n//   var x=0;\n\n//  while (ctr < start.length && ctr < stop.length) \n//   {\n//     result.push(stop[ctr] - start[ctr] );\n//     ctr++;\n//   }\n\n//  if (ctr === start.length) \n//  {\n//     for (x = ctr; x < stop.length; x++)   {\n//       result.push(stop[x]);\n//     }\n//   } \n//   else\n//   {\n//   for (x = ctr; x < start.length; x++) \n//     {\n//       result.push(start[x]);\n//     }\n//   }\n//   return result;\n// }\n\n// mathLib.mul = function(){\n\n// for (let i = 0; i < start.length; i ++){\n//         \tv[i] = s *v[i]\n\n//         \tresult.push(v)\n        \t\n//         }\n//         return result \n// }\n\n// mathLib.range = function(start, end) {\n//     var ans = [];\n//     for (let i = start; i <= end; i++) {\n//         ans.push(i);\n//     }\n//     return ans;\n// }\n// // console.log(range(1,6))\n\n\n// mathLib.sign = function (x) {\n// \tif (isNaN(x)) {\n// \t\treturn NaN\n// \t}\n\n//   if (x > 0) {\n//   \treturn 1\n//   } else if (x === 0 ){\n//   \treturn 0\n//   } else {\n//   \treturn -1\n//   }\n// }\n\n// mathLib.dot = function (a, b) {\n// \tlet sum = 0\n// \tfor ( let i = 0; i < a.length; i++) {\n// \t\tsum += a[i]*b[i]\n// \t}\n// \treturn sum\n// }\n\n// mathLib.abs = function (array) {\n//   var sum = 0\n//   for(i = 0; i < array.length; i++){\n//    sum += Math.pow(Math.abs(array[i]), 2)\n//   }\n//   return Math.sqrt(sum)\n// }\n\n\n// mathLib.zero = function (b, c) {\n\n//     var v = []\n//     for (j = 0; j < b; j ++){\n//         v.push(Array(c).fill(0))\n//     }\n//     return v \n// }\n\n// mathLib.cross = function (a, b){\n\t\n\t\n// \tlet c = [(a[1]*b[2] - a[2]*b[1]), (a[2]*b[0] - a[0]*b[2]), (a[0]*b[1] - a[1]*b[0])]\n// \treturn c\n// }\n\n// mathLib.arrSum = function(arr){\n//   return arr.reduce(function(a,b){\n//     return a + b\n//   }, 0);\n// }\n\n// mathLib.random =function(dataSetSize, minValue, maxValue) {\n//   return new Array(dataSetSize).fill(0).map(function(n) {\n//     return Math.random() * (maxValue - minValue) + minValue;\n//   })\n// }\n\n// mathLib.element = function(a, b, c){\n// \t\t\t\t\tlet v = []\n// \t\t\t\t\tfor ( i = a; i < b.length - c; i++){\n// \t\t\t\t\t\tv.push(b[i])\n// \t\t\t\t\t}\n// \t\t\t\t\treturn v\n// }\n\n// mathLib.pow2 = function (arr) {\n// \tlet s = []\n// \tfor ( let i = 0; i < arr.length; i++) {\n//        s.push(Math.pow(Math.abs(arr[i]),2))\n//       \t}\n// \treturn s\n// }\n// mathLib.addd = function(a, arr){\n//     let s = []\n//     for ( let i = 0; i < arr.length; i++) {\n//     s.push(a + arr[i])\n//     }\n//     return s \n// }\n\n// mathLib.check = function(arr){\n// let v = []\n// let result \n// for (var i = 0; i < arr.length; i++) {\n//     if (arr[i] < 0) {\n//         result = true\n//         } else {\n//         \tresult = false\n//                }\n//         v.push(result)\n//     }\n//     return v\n// }\n\n// mathLib.checkk = function(arr){\n// let v = []\n// let result \n// for (var i = 0; i < arr.length; i++) {\n//     if (arr[i] > 0) {\n//         result = true\n//         } else {\n//         \tresult = false\n//                }\n//         v.push(result)\n//     }\n//     return v\n// }\n\n// mathLib.xor = function(arr1,arr2){\n// \tlet v =[]\n// for (var i = 0; i < arr1.length; i++) {\n     \n//      v.push(arr1[i]^arr2[i])\n     \n// }\n// return v\n// }\n// mathLib.and = function(arr1,arr2){\n// \tlet v =[]\n// for (var i = 0; i < arr1.length; i++) {\n     \n//      v.push(arr1[i] & arr2[i])\n     \n// }\n// return v\n// }\n\n// mathLib.nonflatzero = function(arr){\n// return arr.reduce((ret_arr, number, index) => {\n// if (number != 0) ret_arr.push(index)\n// return ret_arr}, [])\n// }\n\n// mathLib.summ = function (array) {\n//   var finalSum = []\n//   for(i = 0; i < array[0].length; i++){\n//     var s = 0\n//     for (j = 0; j < array.length; j++){\n//        s += array[j][i]\n//     }\n//     finalSum[i] = s;\n//   }\n//   return finalSum\n// }\n\nmodule.exports = mathLib\n"]},"metadata":{},"sourceType":"module"}