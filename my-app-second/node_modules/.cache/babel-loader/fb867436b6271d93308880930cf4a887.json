{"ast":null,"code":"var _jsxFileName = \"/home/parvin/Documents/my-app/src/Progress.js\";\nimport React from \"react\";\nimport BezierEasing from \"bezier-easing\";\nimport BezierComponent from \"./BezierComponent\";\nexport default class Progress extends BezierComponent {\n  constructor(...args) {\n    super(...args);\n    this.easing = BezierEasing(...this.props.value);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (super.shouldComponentUpdate(nextProps)) return true;\n    const _this$props = this.props,\n          value = _this$props.value,\n          progress = _this$props.progress,\n          progressColor = _this$props.progressColor;\n    return nextProps.progress !== progress || nextProps.progressColor !== progressColor || nextProps.value !== value;\n  }\n\n  componentWillUpdate(props) {\n    if (this.props.value !== props.value) {\n      this.easing = BezierEasing(...props.value);\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          progress = _this$props2.progress,\n          progressColor = _this$props2.progressColor;\n    if (!progress) return React.createElement(\"path\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n    const sx = this.x(0);\n    const sy = this.y(0);\n    const px = this.x(progress);\n    const py = this.y(this.easing ? this.easing(progress) : 0);\n    const prog = \"M\".concat(px, \",\").concat(sy, \" L\").concat(px, \",\").concat(py, \" L\").concat(sx, \",\").concat(py);\n    return React.createElement(\"path\", {\n      fill: \"none\",\n      strokeWidth: \"1px\",\n      stroke: progressColor,\n      d: prog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/parvin/Documents/my-app/src/Progress.js"],"names":["React","BezierEasing","BezierComponent","Progress","easing","props","value","shouldComponentUpdate","nextProps","progress","progressColor","componentWillUpdate","render","sx","x","sy","y","px","py","prog"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,eAAe,MAAMC,QAAN,SAAuBD,eAAvB,CAAuC;AAAA;AAAA;AAAA,SACpDE,MADoD,GAC3CH,YAAY,CAAC,GAAG,KAAKI,KAAL,CAAWC,KAAf,CAD+B;AAAA;;AAGpDC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,QAAI,MAAMD,qBAAN,CAA4BC,SAA5B,CAAJ,EAA4C,OAAO,IAAP;AADb,wBAEY,KAAKH,KAFjB;AAAA,UAEvBC,KAFuB,eAEvBA,KAFuB;AAAA,UAEhBG,QAFgB,eAEhBA,QAFgB;AAAA,UAENC,aAFM,eAENA,aAFM;AAG/B,WACEF,SAAS,CAACC,QAAV,KAAuBA,QAAvB,IACAD,SAAS,CAACE,aAAV,KAA4BA,aAD5B,IAEAF,SAAS,CAACF,KAAV,KAAoBA,KAHtB;AAKD;;AAEDK,EAAAA,mBAAmB,CAACN,KAAD,EAAQ;AACzB,QAAI,KAAKA,KAAL,CAAWC,KAAX,KAAqBD,KAAK,CAACC,KAA/B,EAAsC;AACpC,WAAKF,MAAL,GAAcH,YAAY,CAAC,GAAGI,KAAK,CAACC,KAAV,CAA1B;AACD;AACF;;AAEDM,EAAAA,MAAM,GAAG;AAAA,yBAC6B,KAAKP,KADlC;AAAA,UACCI,QADD,gBACCA,QADD;AAAA,UACWC,aADX,gBACWA,aADX;AAEP,QAAI,CAACD,QAAL,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACf,UAAMI,EAAE,GAAG,KAAKC,CAAL,CAAO,CAAP,CAAX;AACA,UAAMC,EAAE,GAAG,KAAKC,CAAL,CAAO,CAAP,CAAX;AACA,UAAMC,EAAE,GAAG,KAAKH,CAAL,CAAOL,QAAP,CAAX;AACA,UAAMS,EAAE,GAAG,KAAKF,CAAL,CAAO,KAAKZ,MAAL,GAAc,KAAKA,MAAL,CAAYK,QAAZ,CAAd,GAAsC,CAA7C,CAAX;AACA,UAAMU,IAAI,cAAOF,EAAP,cAAaF,EAAb,eAAoBE,EAApB,cAA0BC,EAA1B,eAAiCL,EAAjC,cAAuCK,EAAvC,CAAV;AACA,WACE;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,WAAW,EAAC,KAA9B;AAAoC,MAAA,MAAM,EAAER,aAA5C;AAA2D,MAAA,CAAC,EAAES,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA9BmD","sourcesContent":["import React from \"react\";\nimport BezierEasing from \"bezier-easing\";\nimport BezierComponent from \"./BezierComponent\";\n\nexport default class Progress extends BezierComponent {\n  easing = BezierEasing(...this.props.value);\n\n  shouldComponentUpdate(nextProps) {\n    if (super.shouldComponentUpdate(nextProps)) return true;\n    const { value, progress, progressColor } = this.props;\n    return (\n      nextProps.progress !== progress ||\n      nextProps.progressColor !== progressColor ||\n      nextProps.value !== value\n    );\n  }\n\n  componentWillUpdate(props) {\n    if (this.props.value !== props.value) {\n      this.easing = BezierEasing(...props.value);\n    }\n  }\n\n  render() {\n    const { progress, progressColor } = this.props;\n    if (!progress) return <path />;\n    const sx = this.x(0);\n    const sy = this.y(0);\n    const px = this.x(progress);\n    const py = this.y(this.easing ? this.easing(progress) : 0);\n    const prog = `M${px},${sy} L${px},${py} L${sx},${py}`;\n    return (\n      <path fill=\"none\" strokeWidth=\"1px\" stroke={progressColor} d={prog} />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}